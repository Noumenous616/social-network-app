{"version":3,"sources":["Components/Dialogs/DialogsForm.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx"],"names":["maxLength30","maxLengthCreator","DialogsReduxForm","reduxForm","form","props","onSubmit","handleSubmit","Field","component","Textarea","validate","required","name","placeholder","DialogItem","path","id","className","s","dialogs","active","src","img","to","Message","message","Dialogs","state","messagesPage","dialogsElements","map","d","messagesElements","messages","m","isAuth","dialogsItems","values","addMessage","newMessageBody","compose","connect","dispatch","onUserChangeActionCreator","onMessageChangeCreator","withAuthRedirect"],"mappings":"mOAKMA,EAAcC,YAAiB,IAgBxBC,EAAmBC,YAAU,CAACC,KAAM,yBAAjBD,EAfZ,SAACE,GACjB,OACI,uBAAMC,SAAUD,EAAME,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUZ,GAC5Ba,KAAK,iBAAiBC,YAAY,yBAEtC,8BACI,yDCLVC,EAAa,SAACV,GAChB,IAAIW,EAAO,YAAcX,EAAMY,GAC/B,OACI,sBAAKC,UAAWC,IAAEC,QAAU,IAAMD,IAAEE,OAApC,UACI,qBAAKC,IAAKjB,EAAMkB,MAChB,cAAC,IAAD,CAASC,GAAIR,EAAb,SAAoBX,EAAMQ,WAMhCY,EAAU,SAACpB,GAEb,OACI,qBAAKa,UAAWC,IAAEO,QAAlB,SACKrB,EAAMqB,WAsCJC,EAjCC,SAACtB,GAEb,IAAIuB,EAAQvB,EAAMwB,aAGdC,EAAkBF,EAAMR,QAAQW,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYnB,KAAMmB,EAAEnB,KAAMI,GAAIe,EAAEf,GAAIM,IAAKS,EAAET,SACpFU,EAAmBL,EAAMM,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAST,QAASS,EAAET,aAOnE,OAAKrB,EAAM+B,OAIP,sBAAKlB,UAAWC,IAAEC,QAAlB,UACI,qBAAKF,UAAWC,IAAEkB,aAAlB,SACKP,IAEL,sBAAKZ,UAAWC,IAAEe,SAAlB,UACI,8BACMD,IAEN,cAAC/B,EAAD,CAAkBI,SAhBV,SAACgC,GACjBjC,EAAMkC,WAAWD,EAAOE,yBAGF,cAAC,IAAD,CAAUhB,GAAI,Y,yBCI7BiB,sBACXC,aAlBkB,SAACd,GACnB,MAAO,CACHC,aAAcD,EAAMC,iBAIH,SAACc,GACzB,MAAO,CACHJ,WAAY,SAACC,GACTG,EAASC,eACTD,EAASE,YAAuBL,SASrCM,IAFWL,CAGbd","file":"static/js/4.b552b07b.chunk.js","sourcesContent":["import {maxLengthCreator, required} from \"../../utils/validators/valodator\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/controleForms/FormsControls\";\r\nimport React from \"react\";\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\nconst DialogsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength30]}\r\n                name=\"newMessageBody\" placeholder=\"Enter your message\" />\r\n            </div>\r\n            <div>\r\n                <button>Add message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const DialogsReduxForm = reduxForm({form: \"dialogsAddMessageForm\"})(DialogsForm)","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/controleForms/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/valodator\";\r\nimport {DialogsReduxForm} from \"./DialogsForm\";\r\n\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialogs + ' ' + s.active}>\r\n            <img src={props.img} />\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.messagesPage;\r\n\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} img={d.img}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message}/> );\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>;\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>\r\n                    { messagesElements }\r\n                </div>\r\n                <DialogsReduxForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {onMessageChangeCreator, onUserChangeActionCreator} from \"../../redux/dialog-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\n/*const DialogsContainer = (props) => {\r\n\r\n    let state = props.store.getState().messagesPage;\r\n\r\n    let addMessage = () => {\r\n        props.store.dispatch(onUserChangeActionCreator());\r\n        props.store.dispatch(onMessageChangeCreator());\r\n\r\n    }\r\n\r\n    let onMessageChange = (text) => {\r\n        let action = onMessageUpdateCreator(text);\r\n        props.store.dispatch(action);\r\n    }\r\n\r\n\r\n    return <Dialogs  addMessage={addMessage} onMessageChange={onMessageChange} messagesPage={state}/>\r\n}*/\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n return {\r\n     addMessage: (newMessageBody) => {\r\n         dispatch(onUserChangeActionCreator());\r\n         dispatch(onMessageChangeCreator(newMessageBody));\r\n     }\r\n }\r\n\r\n}\r\n\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n\r\n"],"sourceRoot":""}